{
    "messages": [
        {
            "reactions": [
                {
                    "count": 1, 
                    "name": "+1", 
                    "users": [
                        "U34TA50NQ"
                    ]
                }
            ], 
            "text": "So I was writing in the 'PLAYER' field wrong, so it was populating with NaNs...simple fix once I bothered to actually look at it!  Thanks for the help :grimacing:", 
            "type": "message", 
            "user": "U34BY2K3K", 
            "ts": "1487972659.000002"
        }, 
        {
            "text": "Ha, still kicking!", 
            "type": "message", 
            "user": "U34BY2K3K", 
            "ts": "1487695499.000003"
        }, 
        {
            "text": "dude\u2026you still around?", 
            "type": "message", 
            "user": "U34TA50NQ", 
            "ts": "1487694533.000002"
        }, 
        {
            "text": "thanks bud!", 
            "type": "message", 
            "user": "U34BY2K3K", 
            "ts": "1486429066.000003"
        }, 
        {
            "username": "wadere", 
            "display_as_bot": false, 
            "text": "<@U34TA50NQ|wadere> uploaded a file: <https://gstudents.slack.com/files/wadere/F41SXMJ3W/primes.py|primes.py>", 
            "upload": true, 
            "ts": "1486429045.000002", 
            "subtype": "file_share", 
            "user": "U34TA50NQ", 
            "file": {
                "filetype": "python", 
                "lines_more": 89, 
                "channels": [], 
                "display_as_bot": false, 
                "id": "F41SXMJ3W", 
                "size": 2165, 
                "title": "primes.py", 
                "url_private": "https://files.slack.com/files-pri/T1T555TL0-F41SXMJ3W/primes.py", 
                "ims": [
                    "D3M3TM88M"
                ], 
                "preview": "import math\nimport multiprocessing\nimport itertools\nfrom timeit import Timer\nimport time", 
                "external_type": "", 
                "edit_link": "https://gstudents.slack.com/files/wadere/F41SXMJ3W/primes.py/edit", 
                "username": "", 
                "timestamp": 1486429044, 
                "public_url_shared": false, 
                "editable": true, 
                "preview_is_truncated": true, 
                "url_private_download": "https://files.slack.com/files-pri/T1T555TL0-F41SXMJ3W/download/primes.py", 
                "user": "U34TA50NQ", 
                "groups": [], 
                "is_public": false, 
                "pretty_type": "Python", 
                "name": "primes.py", 
                "mimetype": "text/plain", 
                "permalink_public": "https://slack-files.com/T1T555TL0-F41SXMJ3W-c08265cf4c", 
                "permalink": "https://gstudents.slack.com/files/wadere/F41SXMJ3W/primes.py", 
                "is_external": false, 
                "created": 1486429044, 
                "lines": 94, 
                "comments_count": 0, 
                "mode": "snippet", 
                "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">math</span></pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">multiprocessing</span></pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">itertools</span></pre></div>\n<div><pre><span class=\"cm-keyword\">from</span> <span class=\"cm-variable\">timeit</span> <span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">Timer</span></pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">time</span></pre></div>\n</div>\n</div>\n"
            }, 
            "type": "message", 
            "bot_id": null
        }, 
        {
            "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy.stats as scs\nfrom scipy.special import comb,perm,factorial\nfrom scipy.stats.kde import gaussian_kde\n\n\ndef loaddata(filename):\n    df = pd.read_csv(filename, sep=',', parse_dates=['start_date', 'end_date'])\n    df['month'] = df['start_date'].dt.month\n    df['dayofweek'] = df['start_date'].dt.day\n    df['date'] =  df['start_date'].dt.date\n    df['hour'] = df['start_date'].dt.hour\n    return df\n\n\ndef groupbikes(df):\n    ndf = df.groupby(['month', 'dayofweek'])['duration'].count()\n    return ndf\n\ndef groupbikesDOW(df):\n    ndf = df.groupby(['month', 'dayofweek', 'M_S'])['duration'].count()\n    return ndf\n\nif __name__ == '__main__':\n    # load up the date fil\n    df = loaddata('linear-algebra-eda/data/201402_trip_data.csv')\n    #print df.head()\n    ndf = groupbikes(df)\n    print ndf.head()\n    # grouping the data by month counting number of users\n\n\nplt.plot(ndf[ndf['month']==9].index.values, ndf[ndf['month']==9])\nplt.plot(ndf[ndf['month']==10].index.values, ndf[ndf['month']==10])\nplt.plot(ndf[ndf['month']==11].index.values, ndf[ndf['month']==11])\nplt.plot(ndf[ndf['month']==12].index.values, ndf[ndf['month']==12])\nplt.axhline(ndf[ndf['month']&gt;8].mean()[2])\nplt.axhline(1.5*ndf[ndf['month']&gt;8].std()[2]+ndf[ndf['month']&gt;8].mean()[2], color='red', linestyle='--')\nplt.axhline(ndf[ndf['month']&gt;8].mean()[2] - 1.5*ndf[ndf['month']&gt;8].std()[2], color='red', linestyle='--')\nplt.show()\n\nmypdf =  gaussian_kde(ndf['duration'])\nx = linspace(0,1400,20)\nplt.hist(ndf['duration'],bins=20,color='g', normed=True)\nplt.plot(x,mypdf(x),'r')\n\n\nweekday = df[df['M_S']&lt;5]\nwkday = groupbikesDOW(weekday)\n\nweekend = df[df['M_S']&gt;= 5]\nwkend = groupbikesDOW(weekend)\n\nplt.plot(x,mypdf1(x),'r')\nplt.plot(x,mypdf2(x),'b')\nplt.hist(wkday,bins=20,color='r', normed=True, alpha=0.3)\nplt.hist(wkend,bins=20,color='b', normed=True, alpha=0.3)\nplt.show()\n\n\nplt.plt(ndf)\n\nplt.boxplot([ndf[ndf['month']==1]['duration'], ndf[ndf['month']==2]['duration'], ndf[ndf['month']==3]['duration']])\n\na = []\nfor i in xrange(12):\n    a.append(plt.boxplot(ndf[ndf['month']==i]['duration']))", 
            "type": "message", 
            "user": "U34TA50NQ", 
            "ts": "1483491651.000002"
        }
    ], 
    "channel_info": {
        "members": [
            "U34TA50NQ", 
            "U34BY2K3K"
        ]
    }
}